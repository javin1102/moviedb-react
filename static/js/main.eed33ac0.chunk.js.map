{"version":3,"sources":["components/FavouriteCard/FavouriteCard.module.css","components/Card/Card.module.css","pages/FavouritePage.module.css","components/TopRated/TopRated.module.css","components/NavBar/Navbar.jsx","icons/sprite.svg","store/favourite-slice.js","components/FavouriteCard/FavouriteCard.jsx","pages/FavouritePage.jsx","hooks/use-fetch-get.jsx","components/Header/Header.jsx","context/modal-ctx.jsx","components/Card/Card.jsx","components/CardSlider/CardSlider.jsx","components/TopRated/TopRated.jsx","components/DetailModal/DetailModal.jsx","pages/HomePage.jsx","App.js","reportWebVitals.js","context/ModalProvider.jsx","store/store.js","index.js","components/DetailModal/DetailModal.module.css"],"names":["module","exports","Navbar","to","favouriteSlice","createSlice","name","initialState","favouriteMovies","totalFavourite","reducers","toggleFavouriteMovie","state","action","movie","payload","find","mov","id","filter","push","favouriteAction","actions","FavouriteCard","props","useState","isFavourite","setIsFavourite","dispatch","useDispatch","favourite","svg","movieData","imageUrl","title","overview","average","averageCount","release","genre","isFavouriteClass","classes","notFavourite","className","container","card","src","alt","onClick","xlinkHref","FavouritePage","favMovies","useSelector","console","log","map","i","useGet","movieList","setMovieList","sendRequest","useCallback","url","a","fetch","response","ok","Error","json","data","movies","results","movieArr","message","Header","useEffect","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","fade","autoplay","autoplaySpeed","backdrop_path","ModalContext","React","createContext","isOpen","openModalHandler","closeModalHandler","Card","poster_path","detail","modalCtx","useContext","favMov","vote_average","vote_count","release_date","genre_ids","fav","m","favouriteClass","favouriteActive","extra","details","memo","CardSlider","responsive","breakpoint","settings","TopRated","length","Backdrop","backdrop","onClose","DetailModalOverlay","genreList","setGenreList","genres","genreArr","useGetGenre","bq","forEach","e","b","g","middle","top","ml","mr","sinopsis","portalElement","document","getElementById","DetailModal","ReactDOM","createPortal","HomePage","App","basename","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultModalState","modalReducer","type","ModalProvider","useReducer","modalState","dispatchModalAction","modalContext","Provider","value","children","store","configureStore","reducer","render","StrictMode"],"mappings":"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","file":"static/js/main.eed33ac0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FavouriteCard_container__3Ren8\",\"card\":\"FavouriteCard_card__225n9\",\"title\":\"FavouriteCard_title__taH6I\",\"favourite\":\"FavouriteCard_favourite__2o6H8\",\"isFavourite\":\"FavouriteCard_isFavourite__2h8FW\",\"notFavourite\":\"FavouriteCard_notFavourite__Eit6Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__3RY3Y\",\"card\":\"Card_card__3oMme\",\"extra\":\"Card_extra__20tXI\",\"favourite\":\"Card_favourite__3ipeF\",\"details\":\"Card_details__1Gy88\",\"favouriteActive\":\"Card_favouriteActive__1Br3x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FavouritePage_container__cGBIu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TopRated_container__2GZz9\"};","/* eslint-disable react/style-prop-object */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport classes from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst Navbar = () => {\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\">Nobar</NavLink>\r\n\r\n      <ul>\r\n        <NavLink to=\"/favourite\">Favourite</NavLink>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/sprite.082130c3.svg\";","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst favouriteSlice = createSlice({\r\n  name: \"favourite\",\r\n  initialState: {\r\n    favouriteMovies: [],\r\n    totalFavourite: 0,\r\n  },\r\n\r\n  reducers: {\r\n    toggleFavouriteMovie(state, action) {\r\n      const movie = action.payload;\r\n\r\n      const existingMovie = state.favouriteMovies.find(\r\n        (mov) => mov.id === movie.id\r\n      );\r\n      if (!existingMovie) {\r\n        state.favouriteMovies.push(movie);\r\n      } else {\r\n        state.favouriteMovies = state.favouriteMovies.filter(\r\n          (mov) => mov.id !== movie.id\r\n        );\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const favouriteAction = favouriteSlice.actions;\r\nexport default favouriteSlice;\r\n","import classes from \"./FavouriteCard.module.css\";\r\nimport svg from \"../../icons/sprite.svg\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { favouriteAction } from \"../../store/favourite-slice\";\r\nconst FavouriteCard = (props) => {\r\n  const [isFavourite, setIsFavourite] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const favourite = svg + \"#icon-heart\";\r\n\r\n  const movie = props.movieData;\r\n\r\n  const url = \"https://image.tmdb.org/t/p/original\";\r\n  const movieData = {\r\n    imageUrl: url + movie.imageUrl,\r\n    title: movie.title,\r\n    overview: movie.overview,\r\n    average: movie.average,\r\n    averageCount: movie.averageCount,\r\n    release: movie.release,\r\n    genre: movie.genre,\r\n    id: movie.id,\r\n  };\r\n\r\n  const toggleFavouriteHandler = () => {\r\n    setIsFavourite(!isFavourite);\r\n    dispatch(favouriteAction.toggleFavouriteMovie(movieData));\r\n  };\r\n\r\n  const isFavouriteClass = isFavourite\r\n    ? `${classes.favourite} ${classes.isFavourite}`\r\n    : `${classes.favourite} ${classes.notFavourite}`;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.card}>\r\n        <img src={movie.imageUrl} alt=\"MovieImage\" />\r\n\r\n        <svg className={isFavouriteClass} onClick={toggleFavouriteHandler}>\r\n          <use xlinkHref={favourite}></use>\r\n        </svg>\r\n      </div>\r\n      <p className={classes.title}>{movie.title}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default FavouriteCard;\r\n","import Navbar from \"../components/NavBar/Navbar\";\r\nimport { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport FavouriteCard from \"../components/FavouriteCard/FavouriteCard\";\r\nimport classes from \"./FavouritePage.module.css\";\r\nconst FavouritePage = () => {\r\n  const favMovies = useSelector((state) => state.favourite.favouriteMovies);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <div className={classes.container}>\r\n        {console.log(favMovies)}\r\n\r\n        {favMovies.map((mov, i) => (\r\n          <FavouriteCard key={mov.id} movieData={mov} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default FavouritePage;\r\n","import { useState } from \"react\";\r\nimport { useCallback } from \"react\";\r\n\r\nconst useGet = () => {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const sendRequest = useCallback(async (url) => {\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n      const data = await response.json();\r\n      const movies = data.results;\r\n      const movieArr = [];\r\n      for (const movie of movies) {\r\n        movieArr.push(movie);\r\n      }\r\n      setMovieList(movieArr);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }, []);\r\n  return {\r\n    movieList,\r\n    sendRequest,\r\n  };\r\n};\r\nexport default useGet;\r\n\r\nexport const useGetGenre = () => {\r\n  const [genreList, setGenreList] = useState([]);\r\n  const sendRequest = useCallback(async (url) => {\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n      const data = await response.json();\r\n      const genres = data.genres;\r\n      const genreArr = [];\r\n      for (const genre of genres) {\r\n        genreArr.push(genre);\r\n      }\r\n      setGenreList(genreArr);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }, []);\r\n  return {\r\n    genreList,\r\n    sendRequest,\r\n  };\r\n};\r\n","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport classes from \"./Header.css\";\r\nimport Slider from \"react-slick\";\r\nimport useGet from \"../../hooks/use-fetch-get\";\r\nimport \"../../../node_modules/slick-carousel/slick/slick.css\";\r\nimport \"../../../node_modules/slick-carousel/slick/slick-theme.css\";\r\n\r\nconst Header = () => {\r\n  const url = \"https://image.tmdb.org/t/p/original\";\r\n  const { movieList, sendRequest } = useGet();\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 700,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    arrows: true,\r\n    fade: true,\r\n    className: \"slider\",\r\n    autoplay: true,\r\n    autoplaySpeed: 4000,\r\n  };\r\n\r\n  useEffect(() => {\r\n    sendRequest(\r\n      \"https://api.themoviedb.org/3/movie/popular?api_key=26e53c79e6035b58b0922736b9a96231&language=en-US&page=1\"\r\n    );\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <header>\r\n      {!!movieList && (\r\n        <Slider {...settings}>\r\n          {movieList.map((movie, i) => {\r\n            if (i >= 6) return \"\";\r\n            else {\r\n              if (movie.backdrop_path === null) {\r\n                return \"\";\r\n              } else {\r\n                return (\r\n                  <div key={i}>\r\n                    <img\r\n                      src={url + movie.backdrop_path}\r\n                      alt=\"PopularMovieImage\"\r\n                    />\r\n                  </div>\r\n                );\r\n              }\r\n            }\r\n          })}\r\n        </Slider>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nconst ModalContext = React.createContext({\r\n  isOpen: false,\r\n  imageUrl: \"\",\r\n  title: \"\",\r\n  overview: \"\",\r\n  average: 0,\r\n  averageCount: 0,\r\n  release: 0,\r\n  genre: [],\r\n  id: 0,\r\n  openModalHandler: () => {},\r\n  closeModalHandler: () => {},\r\n});\r\n\r\nexport default ModalContext;\r\n","/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport classes from \"./Card.module.css\";\r\nimport svg from \"../../icons/sprite.svg\";\r\nimport ModalContext from \"../../context/modal-ctx\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport { favouriteAction } from \"../../store/favourite-slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Card = (props) => {\r\n  const [isFavourite, setIsFavourite] = useState(false);\r\n  const url = \"https://image.tmdb.org/t/p/original\";\r\n  const movie = props.movieData;\r\n  const imageUrl = url + movie.poster_path;\r\n  const detail = svg + \"#icon-menu\";\r\n  const favourite = svg + \"#icon-heart\";\r\n\r\n  const modalCtx = useContext(ModalContext);\r\n  const dispatch = useDispatch();\r\n  const favMov = useSelector((state) => state.favourite.favouriteMovies);\r\n  const movieData = {\r\n    imageUrl: url + movie.poster_path,\r\n    title: movie.title,\r\n    overview: movie.overview,\r\n    average: movie.vote_average,\r\n    averageCount: movie.vote_count,\r\n    release: movie.release_date,\r\n    genre: movie.genre_ids,\r\n    id: movie.id,\r\n  };\r\n\r\n  const openModalHandler = () => {\r\n    modalCtx.openModalHandler(movieData);\r\n  };\r\n\r\n  const toggleFavouriteHandler = () => {\r\n    setIsFavourite(!isFavourite);\r\n    dispatch(favouriteAction.toggleFavouriteMovie(movieData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fav = favMov.find((m) => m.id === movie.id);\r\n    if (!fav) setIsFavourite(false);\r\n    else setIsFavourite(true);\r\n  }, [favMov, movie]);\r\n\r\n  let favouriteClass = !isFavourite\r\n    ? `${classes.favourite}`\r\n    : `${classes.favouriteActive}`;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.card}>\r\n        <img src={imageUrl} alt=\"Card Image\" />\r\n        <div className={classes.extra}>\r\n          <svg className={classes.details} onClick={openModalHandler}>\r\n            <use xlinkHref={detail}></use>\r\n          </svg>\r\n\r\n          <svg className={favouriteClass} onClick={toggleFavouriteHandler}>\r\n            <use xlinkHref={favourite}></use>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <p>{movie.title}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default React.memo(Card);\r\n","import Card from \"../Card/Card\";\r\nimport classes from \"./CardSlider.css\";\r\nimport \"../../../node_modules/slick-carousel/slick/slick.css\";\r\nimport \"../../../node_modules/slick-carousel/slick/slick-theme.css\";\r\n\r\nimport Slider from \"react-slick\";\r\nimport { Fragment } from \"react\";\r\nconst CardSlider = (props) => {\r\n  const settings = {\r\n    dots: true,\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 6,\r\n    arrows: true,\r\n    className: \"card-slider\",\r\n    responsive: [\r\n      {\r\n        breakpoint: 800,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 4,\r\n        },\r\n      },\r\n\r\n      {\r\n        breakpoint: 450,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Slider {...settings}>\r\n        {props.movieList.map((movie, i) => {\r\n          return (\r\n            <div key={movie.id}>\r\n              <Card key={movie.id} movieData={movie} />\r\n            </div>\r\n          );\r\n        })}\r\n      </Slider>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default CardSlider;\r\n","import { useEffect } from \"react\";\r\nimport CardSlider from \"../CardSlider/CardSlider\";\r\nimport useGet from \"../../hooks/use-fetch-get\";\r\nimport classes from \"./TopRated.module.css\";\r\n\r\nconst TopRated = () => {\r\n  const { sendRequest, movieList } = useGet();\r\n  // \"https://api.themoviedb.org/3/movie/top_rated?api_key=26e53c79e6035b58b0922736b9a96231&language=en-US&page=1\"\r\n  useEffect(() => {\r\n    sendRequest(\r\n      \"https://api.themoviedb.org/3/movie/top_rated?api_key=26e53c79e6035b58b0922736b9a96231&language=en-US&page=1\"\r\n    );\r\n  }, [sendRequest]);\r\n  return (\r\n    <div className={classes.container}>\r\n      <h3>Top Rated</h3>\r\n      {movieList.length > 0 && <CardSlider movieList={movieList} />}\r\n    </div>\r\n  );\r\n};\r\nexport default TopRated;\r\n","import classes from \"./DetailModal.module.css\";\r\nimport ModalContext from \"../../context/modal-ctx\";\r\nimport { useContext, Fragment } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useGetGenre } from \"../../hooks/use-fetch-get\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClose}></div>;\r\n};\r\nconst DetailModalOverlay = (props) => {\r\n  const modalCtx = useContext(ModalContext);\r\n  const { genreList, sendRequest } = useGetGenre();\r\n  useEffect(() => {\r\n    sendRequest(\r\n      \"https://api.themoviedb.org/3/genre/movie/list?api_key=26e53c79e6035b58b0922736b9a96231&language=en-US\"\r\n    );\r\n  }, [sendRequest]);\r\n  let bq = [];\r\n  modalCtx.genre.forEach((e) => {\r\n    const b = genreList.find((g) => g.id === e);\r\n    !!b && bq.push(b);\r\n  });\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <span onClick={modalCtx.closeModalHandler}>&#10006;</span>\r\n      <img src={modalCtx.imageUrl} alt=\"Movie Backdrop\" />\r\n      <div className={classes.middle}>\r\n        <h3>{modalCtx.title}</h3>\r\n        <div className={classes.detail + \" \" + classes.top}>\r\n          <h4 className={classes.ml}>\r\n            Genre :{\"  \"}\r\n            {bq.length > 0 &&\r\n              bq.map((e, i) => e.name + `${bq.length - 1 !== i ? \", \" : \"\"}`)}\r\n          </h4>\r\n          <h4 className={classes.mr}>Release : {\"  \" + modalCtx.release}</h4>\r\n        </div>\r\n\r\n        <div className={classes.detail + \" \" + classes.top}>\r\n          <h4 className={classes.ml}>Average</h4>\r\n          <h4 className={classes.mr}>\r\n            {modalCtx.average + \" \"} ({modalCtx.averageCount} votes)\r\n          </h4>\r\n        </div>\r\n\r\n        <p className={classes.sinopsis}>{modalCtx.overview}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst portalElement = document.getElementById(\"overlays\");\r\nconst DetailModal = () => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(<Backdrop />, portalElement)}\r\n      {ReactDOM.createPortal(<DetailModalOverlay />, portalElement)}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DetailModal;\r\n","import Navbar from \"../components/NavBar/Navbar\";\r\nimport Header from \"../components/Header/Header\";\r\nimport TopRated from \"../components/TopRated/TopRated\";\r\nimport DetailModal from \"../components/DetailModal/DetailModal\";\r\nimport ModalContext from \"../context/modal-ctx\";\r\n\r\nimport { Fragment, useContext } from \"react\";\r\nconst HomePage = () => {\r\n  const modalCtx = useContext(ModalContext);\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Header />\r\n      <TopRated />\r\n      {modalCtx.isOpen && <DetailModal />}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default HomePage;\r\n","//26e53c79e6035b58b0922736b9a96231\n//https://api.themoviedb.org/3/movie/550?api_key=26e53c79e6035b58b0922736b9a96231\n//https://image.tmdb.org/t/p/original/[poster_path]\n\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport FavouritePage from \"./pages/FavouritePage\";\nimport HomePage from \"./pages/HomePage\";\nfunction App() {\n  return (\n    <BrowserRouter basename=\"https://javin1102.github.io/moviedb-react\">\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Route path=\"/favourite\">\n          <FavouritePage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useReducer } from \"react\";\r\nimport ModalContext from \"./modal-ctx\";\r\n\r\nconst defaultModalState = {\r\n  isOpen: false,\r\n  imageUrl: \"\",\r\n  title: \"\",\r\n  overview: \"\",\r\n  average: 0,\r\n  averageCount: 0,\r\n  release: 0,\r\n  id: 0,\r\n  genre: [],\r\n};\r\n\r\nconst modalReducer = (state, action) => {\r\n  if (action.type === \"OPEN_MODAL\") {\r\n    return {\r\n      imageUrl: action.imageUrl,\r\n      title: action.title,\r\n      overview: action.overview,\r\n      average: action.average,\r\n      averageCount: action.averageCount,\r\n      release: action.release,\r\n      genre: action.genre,\r\n      isOpen: true,\r\n    };\r\n  } else if (action.type === \"CLOSE_MODAL\") {\r\n    return defaultModalState;\r\n  }\r\n  return defaultModalState;\r\n};\r\n\r\nconst ModalProvider = (props) => {\r\n  const [modalState, dispatchModalAction] = useReducer(\r\n    modalReducer,\r\n    defaultModalState\r\n  );\r\n\r\n  const openModalHandler = (action) => {\r\n    dispatchModalAction({\r\n      type: \"OPEN_MODAL\",\r\n      imageUrl: action.imageUrl,\r\n      title: action.title,\r\n      overview: action.overview,\r\n      average: action.average,\r\n      averageCount: action.averageCount,\r\n      release: action.release,\r\n      genre: action.genre,\r\n      id: action.id,\r\n    });\r\n  };\r\n  const closeModalHandler = () => {\r\n    dispatchModalAction({ type: \"CLOSE_MODAL\" });\r\n  };\r\n  const modalContext = {\r\n    isOpen: modalState.isOpen,\r\n    imageUrl: modalState.imageUrl,\r\n    title: modalState.title,\r\n    overview: modalState.overview,\r\n    average: modalState.average,\r\n    averageCount: modalState.averageCount,\r\n    release: modalState.release,\r\n    genre: modalState.genre,\r\n    id: modalState.id,\r\n    openModalHandler: openModalHandler,\r\n    closeModalHandler: closeModalHandler,\r\n  };\r\n\r\n  return (\r\n    <ModalContext.Provider value={modalContext}>\r\n      {props.children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalProvider;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport favouriteSlice from \"./favourite-slice\";\r\nconst store = configureStore({\r\n  reducer: {\r\n    favourite: favouriteSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ModalProvider from \"./context/ModalProvider\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n// const e = document.getElementById(\"root\");\n\n// e.style.maxWidth = `${window.screen.width}px`;\nReactDOM.render(\n  <React.StrictMode>\n    <ModalProvider>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ModalProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DetailModal_container__2tjCK\",\"backdrop\":\"DetailModal_backdrop__eGAJo\",\"middle\":\"DetailModal_middle__RoYoB\",\"detail\":\"DetailModal_detail__2p7T1\",\"sinopsis\":\"DetailModal_sinopsis__2eaHD\",\"top\":\"DetailModal_top__3kVh2\",\"mr\":\"DetailModal_mr__1IiTf\",\"ml\":\"DetailModal_ml__3VVcC\"};"],"sourceRoot":""}